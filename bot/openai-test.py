import telebot
import apsw
import threading
from telebot import types
from data_manager import TOKEN
from openai import OpenAI

client = OpenAI(api_key='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')

bot = telebot.TeleBot(TOKEN)
gpt_chat_enabled = False

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º apsw
conn = apsw.Connection("gpt_chat.db")
cursor_lock = threading.Lock()


@bot.message_handler(commands=['start'])
def welcome(message):
    hi = open('image/Hi.webp', 'rb')
    bot.send_sticker(message.chat.id, hi)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è ChatGPT s telegram.', reply_markup=start_menu(), )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ GPT —á–∞—Ç–∞
@bot.message_handler(commands=['gpt_chat'])
def enable_gpt_chat(message):
    # –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ GPT —á–∞—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    with cursor_lock:
        cursor = conn.cursor()
        cursor.execute('UPDATE users SET gpt_chat_enabled = 1 WHERE user_id = ?', (user_id,))
        conn.commit()
    bot.send_message(message.chat.id, "–†–µ–∂–∏–º GPT —á–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —á–∞—Ç–∞.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ GPT —á–∞—Ç–∞
@bot.message_handler(commands=['back', 'stop'])
def disable_gpt_chat(message):
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ GPT —á–∞—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    with cursor_lock:
        cursor = conn.cursor()
        cursor.execute('UPDATE users SET gpt_chat_enabled = 0 WHERE user_id = ?', (user_id,))
        conn.commit()
    bot.send_message(message.chat.id, "–†–µ–∂–∏–º GPT —á–∞—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def gpt(message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–∂–∏–º–∞ GPT —á–∞—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    with cursor_lock:
        cursor = conn.cursor()
        cursor.execute('SELECT gpt_chat_enabled FROM users WHERE user_id = ?', (user_id,))
        result = cursor.fetchone()

        if result is not None:
            gpt_chat_enabled = result[0]
            print(f"User {user_id}, GPT chat enabled: {gpt_chat_enabled}")
        else:
            print(f"User {user_id} not found in the database.")
            gpt_chat_enabled = 0

    if gpt_chat_enabled:
        # –ø–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        prompt = message.text
        msg = bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞..')
        # prompt = str(input())  –≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–µ
        # gpt-4, gpt-4 turbo –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –ø–æ–∑–∂–µ
        response = client.chat.completions.create(
            model="gpt-3.5-turbo-1106",
            messages=[
                {"role": "system", "content": "–¢—ã —Ä—É—Å—Å–∫–∏–π, –Ω–∞—É—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫"},
                {"role": "user", "content": prompt}
            ]
        )
        # gpt_text=str(response)
        gpt_text2 = response.choices[0].message.content
        tokens = response.usage.total_tokens
        # —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # bot.edit_message_text("...", chat_id=message.chat.id, message_id=msg.message_id)
        bot.delete_message(message.chat.id, msg.message_id)
        #  –æ—Ç–≤–µ—Ç –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(message.chat.id, gpt_text2)
        bot.send_message(message.chat.id, f"–ø–æ—Ç—Ä–∞—á–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: {tokens}")
        # –æ—Ç–≤–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–µ
        print('\n–≤–æ–ø—Ä–æ—Å:', prompt)
        print('\n–æ—Ç–≤–µ—Ç:', gpt_text2)
        print('–ø–æ—Ç—Ä–∞—á–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤:', tokens)
    else:
        bot.reply_to(message, "—Ä–µ–∂–∏–º gpt –æ—Ç–∫–ª—é—á–µ–Ω" )


def start_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_chat_gpt = types.KeyboardButton("/gpt_chat")
    item2 = types.KeyboardButton("/start")
    item3 = types.KeyboardButton("—Ä–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞")
    item4 = types.KeyboardButton("üé≠ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å")
    item5 = types.KeyboardButton("/stop")
    item6 = types.KeyboardButton("üé≠ –∑–∞–¥–∞—Ç—å —Ä–æ–ª—å")
    markup.add(item_chat_gpt, item2, item3, item4, item5, item6)
    return markup


if __name__ == "__main__":
    print('–ó–∞–ø—É—â–µ–Ω...')
    bot.polling(none_stop=True)
